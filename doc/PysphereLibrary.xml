<?xml version="1.0" encoding="UTF-8"?>
<keywordspec generated="20141013 13:18:36" type="library" name="PysphereLibrary" format="ROBOT">
<version>1.1.2</version>
<scope>global</scope>
<namedargs>yes</namedargs>
<doc>Robot Framework test library for VMWare interaction

The library has the following main usages:
- Identifying available virtual machines on a vCenter or
  ESXi host
- Starting and stopping VMs
- Shutting down, rebooting VM guest OS
- Checking VM status
- Waiting for VM tools to start running
- Reverting VMs to a snapshot
- Retrieving basic VM properties
- File upload, deletion and relocation
- Directory creation, deletion and relocation
- Process execution and termination

This library is essentially a wrapper around Pysphere
http://code.google.com/p/pysphere/ adding connection
caching consistent with other Robot Framework libraries.</doc>
<kw name="Close All Pysphere Connections">
<arguments>
</arguments>
<doc>Closes all active pysphere connections.

This keyword is appropriate for use in test or suite
teardown. The assignment of connection indices resets
after calling this keyword, and the next connection
opened will be allocated index `1`.

Example:
| ${my_connection}= | Open Pysphere Connection | myhost | myuser | mypassword |
| Open Pysphere Connection | myotherhost | myuser | mypassword | alias=otherhost |
| Switch Pysphere Connection | ${myserver} |
| Power On Vm | myvm |
| Switch Pysphere Connection | otherhost |
| Power On Vm | myothervm |
| [Teardown] | Close All Pysphere Connections |</doc>
</kw>
<kw name="Close Pysphere Connection">
<arguments>
</arguments>
<doc>Closes the current pysphere connection.

No other connection is made active by this keyword. use
`Switch Pysphere Connection` to switch to another connection.

Example:
| ${my_connection}= | Open Pysphere Connection | myhost | myuser | mypassword |
| Power On Vm | myvm |
| Close Pysphere Connection |</doc>
</kw>
<kw name="Get Vm Names">
<arguments>
</arguments>
<doc>Returns a list of all registered VMs for the
currently active connection.

Example:
| Open Pysphere Connection | myhost | myuser | mypassword |
| @{vm_names}= | Get Vm Names |</doc>
</kw>
<kw name="Get Vm Properties">
<arguments>
<arg>name</arg>
</arguments>
<doc>Returns a dictionary of the properties
associated with the named VM.</doc>
</kw>
<kw name="Is Connected To Pysphere">
<arguments>
</arguments>
<doc></doc>
</kw>
<kw name="Open Pysphere Connection">
<arguments>
<arg>host</arg>
<arg>user</arg>
<arg>password</arg>
<arg>alias=None</arg>
</arguments>
<doc>Opens a pysphere connection to the given `host`
using the supplied `user` and `password`.

The new connection is made active and any existing connections
are left open in the background.

This keyword returns the index of the new connection which
can be used later to switch back to it. Indices start from `1`
and are reset when `Close All Pysphere Connections` is called.

An optional `alias` can be supplied for the connection and used
for switching between connections. See `Switch Pysphere
Connection` for details.

Example:
| ${index}= | Open Pysphere Connection | my.vcenter.server.com | username | password | alias=myserver |</doc>
</kw>
<kw name="Power Off Vm">
<arguments>
<arg>name</arg>
</arguments>
<doc>Power off the vm if it is not
already powered off. This method blocks
until the operation is completed.</doc>
</kw>
<kw name="Power On Vm">
<arguments>
<arg>name</arg>
</arguments>
<doc>Power on the vm if it is not
already running. This method blocks
until the operation is completed.</doc>
</kw>
<kw name="Reboot Vm Os">
<arguments>
<arg>name</arg>
</arguments>
<doc>Initiate a reboot in the guest OS
in the VM, returning immediately.</doc>
</kw>
<kw name="Reset Vm">
<arguments>
<arg>name</arg>
</arguments>
<doc>Perform a reset on the VM. This
method blocks until the operation is
completed.</doc>
</kw>
<kw name="Revert Vm To Snapshot">
<arguments>
<arg>name</arg>
<arg>snapshot_name=None</arg>
</arguments>
<doc>Revert the named VM to a snapshot. If `snapshot_name`
is supplied it is reverted to that snapshot, otherwise
it is reverted to the current snapshot. This method
blocks until the operation is completed.</doc>
</kw>
<kw name="Shutdown Vm Os">
<arguments>
<arg>name</arg>
</arguments>
<doc>Initiate a shutdown in the guest OS
in the VM, returning immediately.</doc>
</kw>
<kw name="Switch Pysphere Connection">
<arguments>
<arg>index_or_alias</arg>
</arguments>
<doc>Switches the active connection by index of alias.

`index_or_alias` is either a connection index (an integer)
or alias (a string). Index can be obtained by capturing
the return value from `Open Pysphere Connection` and
alias can be set as a named variable with the same method.

Example:
| ${my_connection}= | Open Pysphere Connection | myhost | myuser | mypassword |
| Open Pysphere Connection | myotherhost | myuser | mypassword | alias=otherhost |
| Switch Pysphere Connection | ${my_connection} |
| Power On Vm | myvm |
| Switch Pysphere Connection | otherhost |
| Power On Vm | myothervm |</doc>
</kw>
<kw name="Vm Delete Directory">
<arguments>
<arg>name</arg>
<arg>path</arg>
</arguments>
<doc>Deletes the directory with the given `path` on the named VM,
including its contents. The `Vm Login In Guest` keyword must precede
this keyword.

Example:
| Open Pysphere Connection | myhost | myuser | mypassword |
| Vm Login In Guest | myvm | vm_username | vm_password |
| Vm Delete Directory | myvm | C:\directory |</doc>
</kw>
<kw name="Vm Delete File">
<arguments>
<arg>name</arg>
<arg>remote_path</arg>
</arguments>
<doc>Deletes the file with the given `remote_path` on the named VM. The
`Vm Login In Guest` keyword must precede this keyword.

Example:
| Open Pysphere Connection | myhost | myuser | mypassword |
| Vm Login In Guest | myvm | vm_username | vm_password |
| Vm Delete File | myvm | C:\remote_file.txt |</doc>
</kw>
<kw name="Vm Get File">
<arguments>
<arg>name</arg>
<arg>remote_path</arg>
<arg>local_path</arg>
</arguments>
<doc>Downloads a file from the `remote_path` on the named VM to the
specified `local_path`, overwriting any existing local file. The
`Vm Login In Guest` keyword must precede this keyword.

Example:
| Open Pysphere Connection | myhost | myuser | mypassword |
| Vm Login In Guest | myvm | vm_username | vm_password |
| Vm Get File | myvm | C:\remote\location.txt | C:\local\location.txt |</doc>
</kw>
<kw name="Vm Is Powered Off">
<arguments>
<arg>name</arg>
</arguments>
<doc>Returns true if the VM is in the
powered off state.</doc>
</kw>
<kw name="Vm Is Powered On">
<arguments>
<arg>name</arg>
</arguments>
<doc>Returns true if the VM is in the
powered on state.</doc>
</kw>
<kw name="Vm Login In Guest">
<arguments>
<arg>name</arg>
<arg>username</arg>
<arg>password</arg>
</arguments>
<doc>Logs into the named VM with the specified `username` and `password`.
The VM must be powered on and the VM tools must be running on the VM,
which can be verified using the `Vm Wait For Tools` keyword.

Example:
| Open Pysphere Connection | myhost | myuser | mypassword |
| Power On Vm | myvm |
| Vm Wait For Tools | myvm |
| Vm Login In Guest | myvm | vm_username | vm_password |</doc>
</kw>
<kw name="Vm Make Directory">
<arguments>
<arg>name</arg>
<arg>path</arg>
</arguments>
<doc>Creates a directory with the specified `path` on the named VM. The
`Vm Login In Guest` keyword must precede this keyword.

Example:
| Open Pysphere Connection | myhost | myuser | mypassword |
| Vm Login In Guest | myvm | vm_username | vm_password |
| Vm Make Directory | myvm | C:\some\directory\path |</doc>
</kw>
<kw name="Vm Move Directory">
<arguments>
<arg>name</arg>
<arg>src_path</arg>
<arg>dst_path</arg>
</arguments>
<doc>Moves or renames a directory from `src_path` to `dst_path` on the
named VM. The `Vm Login In Guest` keyword must precede this keyword.

Example:
| Open Pysphere Connection | myhost | myuser | mypassword |
| Vm Login In Guest | myvm | vm_username | vm_password |
| Vm Move Directory | myvm | C:\directory1 | C:\directory2 |</doc>
</kw>
<kw name="Vm Move File">
<arguments>
<arg>name</arg>
<arg>src_path</arg>
<arg>dst_path</arg>
</arguments>
<doc>Moves a remote file on the named VM from `src_path` to `dst_path`,
overwriting any existing file at the target location. The
`Vm Login In Guest` keyword must precede this keyword.

Example:
| Open Pysphere Connection | myhost | myuser | mypassword |
| Vm Login In Guest | myvm | vm_username | vm_password |
| Vm Move File | myvm | C:\original_location.txt | C:\new_location.txt |</doc>
</kw>
<kw name="Vm Run Synchronous Process">
<arguments>
<arg>name</arg>
<arg>cwd</arg>
<arg>program_path</arg>
<arg>*args</arg>
<arg>**kwargs</arg>
</arguments>
<doc>Executes a process on the named VM and blocks until the process has
completed. Parameters are the same as for `vm_start_process`. Returns
the exit code of the process. The `Vm Login In Guest` keyword must
precede this keyword.

Example:
| Open Pysphere Connection | myhost | myuser | mypassword |
| Vm Login In Guest | myvm | vm_username | vm_password |
| ${rc}= | Vm Run Synchronous Process | myvm | C:\ | C:\windows\system32\cmd.exe | /c | echo | hello world |
| Should Be Equal As Integers | ${rc} | 0 |</doc>
</kw>
<kw name="Vm Send File">
<arguments>
<arg>name</arg>
<arg>local_path</arg>
<arg>remote_path</arg>
</arguments>
<doc>Uploads a file from `local_path` to the specified `remote_path` on
the named VM, overwriting any existing remote file. The
`Vm Login In Guest` keyword must precede this keyword.

Example:
| Open Pysphere Connection | myhost | myuser | mypassword |
| Vm Login In Guest | myvm | vm_username | vm_password |
| Vm Send File | myvm | C:\local\location.txt | C:\remote\location.txt |</doc>
</kw>
<kw name="Vm Start Process">
<arguments>
<arg>name</arg>
<arg>cwd</arg>
<arg>program_path</arg>
<arg>*args</arg>
<arg>**kwargs</arg>
</arguments>
<doc>Starts a program in the named VM with the working directory specified
by `cwd`. Returns the process PID. The `Vm Login In Guest` keyword must
precede this keyword.

The optional `env` argument can be used to provide a dictionary
containing environment variables to be set for the program
being run.

Example:
| Open Pysphere Connection | myhost | myuser | mypassword |
| Vm Login In Guest | myvm | vm_username | vm_password |
| ${pid}= | Vm Start Process | myvm | C:\ | C:\windows\system32\cmd.exe | /c | echo | hello world |</doc>
</kw>
<kw name="Vm Terminate Process">
<arguments>
<arg>name</arg>
<arg>pid</arg>
</arguments>
<doc>Terminates the process with the given `pid` on the named VM. The
`Vm Login In Guest` keyword must precede this keyword.

Example:
| Open Pysphere Connection | myhost | myuser | mypassword |
| Vm Login In Guest | myvm | vm_username | vm_password |
| ${pid}= | Vm Start Process | myvm | C:\ | C:\windows\system32\cmd.exe | /c | pause |
| Vm Terminate Process | myvm | ${pid} |</doc>
</kw>
<kw name="Vm Wait For Tools">
<arguments>
<arg>name</arg>
<arg>timeout=120</arg>
</arguments>
<doc>Waits for up to the `timeout` interval for the VM tools to start
running on the named VM. VMware tools must be running on the VM for the
`Vm Login In Guest` keyword to succeed.</doc>
</kw>
</keywordspec>
